[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pyvisgen"
dynamic = ["version"]
description = "Simulate radio interferometer observations and visibility generation with the RIME formalism."
readme = "README.rst"
authors = [
  { name = "Kevin Schmitz", email = "kevin2.schmitz@tu-dortmund.de" },
  { name = "Felix Geyer" },
  { name = "Stefan Fröse" },
  { name = "Anno Knierim", email = "anno.knierim@tu-dortmund.de" },
  { name = "Tom Groß", email = "tom.gross@tu-dortmund.de" },
]
maintainers = [
  { name = "Kevin Schmitz", email = "kevin2.schmitz@tu-dortmund.de" },
  { name = "Anno Knierim", email = "anno.knierim@tu-dortmund.de" },
  { name = "Tom Groß", email = "tom.gross@tu-dortmund.de" },
]
license = { text = "MIT" }
classifiers = [
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering :: Astronomy",
  "Topic :: Scientific/Engineering :: Physics",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Development Status :: 4 - Beta",
]

requires-python = ">=3.10"

dependencies = [
  "astropy<=6.1.0",
  "click",
  "h5py",
  "joblib",
  "natsort",
  "numpy",
  "pandas",
  "pyvisgrid",
  "rich",
  "rich-click>=1.8.9",
  "scipy",
  "toma",
  "toml",
  "torch",
  "tqdm",
]

[project.optional-dependencies]
plot = ["matplotlib"]

tutorials = ["matplotlib", "pytorch_finufft"]

[dependency-groups]
tests = [
  "coverage!=6.3.0",
  "h5py",
  "pytest >= 7.0",
  "pytest-cov",
  "pytest-xdist",
  "restructuredtext-lint",
  "tomli",
]

docs = [
  "graphviz",
  "ipython",
  "jupyter",
  "linkify-it-py>=2.0.3",
  "matplotlib",
  "myst-parser>=4.0.1",
  "nbsphinx",
  "notebook",
  "numpydoc",
  "pydata_sphinx_theme",
  "sphinx",
  "sphinx-autobuild>=2024.10.3",
  "sphinx-changelog",
  "sphinx-copybutton",
  "sphinx-design",
  "sphinx-gallery >= 0.16.0",
  "sphinx-tippy>=0.4.3",
  "sphinx-togglebutton>=0.3.2",
  "sphinx_automodapi",
  "sphinxcontrib-bibtex",
  "tomli; python_version < '3.11'",
]

dev = [
  "ipython",
  "jupyter",
  "pre-commit",
  "pytorch_finufft",
  { include-group = "tests" },
  { include-group = "docs" },
]

[project.scripts]
pyvisgen-simulate = "pyvisgen.dataset.scripts.create_dataset:main"
pyvisgen-quickstart = "pyvisgen.tools.quickstart:quickstart"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/pyvisgen/_version.py"

[tool.hatch.build.targets.wheel]
include = ["src/pyvisgen"]

[tool.hatch.build.targets.wheel.sources]
"src/pyvisgen" = "pyvisgen"

[tool.hatch.build.targets.wheel.shared-data]
"resources" = "share/resources"
"config" = "share/configs"

[tool.hatch.metadata]
"allow-direct-references" = true

[tool.coverage.run]
omit = [
  "docs/*",
  "src/pyvisgen/_version.py",
  "src/pyvisgen/gridding/alt_gridder.py",
  "src/pyvisgen/version.py",
]

[tool.coverage.xml]
output = "coverage.xml"

[tool.ruff]
target-version = "py311"
line-length = 88
extend-exclude = ["tests", "examples"]

[tool.ruff.lint]
extend-select = [
  "I", # isort
]
ignore = []

fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false
docstring-code-format = true

[tool.ruff.lint.isort]
known-first-party = ["pyvisgen"]

[tool.towncrier]
package = "pyvisgen"
directory = "docs/changes"
filename = "CHANGES.rst"
template = "docs/changes/template.rst"
# let towncrier create proper links to the merged PR
issue_format = "`#{issue} <https://github.com/radionets-project/pyvisgen/pull/{issue}>`__"

[tool.towncrier.fragment.feature]
name = "New Features"
showcontent = true

[tool.towncrier.fragment.bugfix]
name = "Bug Fixes"
showcontent = true

[tool.towncrier.fragment.api]
name = "API Changes"
showcontent = true

[tool.towncrier.fragment.optimization]
name = "Refactoring and Optimization"
showcontent = true

[tool.towncrier.fragment.maintenance]
name = "Maintenance"
showcontent = true

[[tool.towncrier.section]]
name = ""
path = ""
